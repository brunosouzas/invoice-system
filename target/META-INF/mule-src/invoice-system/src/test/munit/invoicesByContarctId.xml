<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="invoicesByContractID-suite.xml" />
	<munit:test name="invoicesByContarctID-test" doc:id="e93fe81c-efd5-4990-8020-2065e75fc55e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock readCSV" doc:id="7cd3b0dc-2e60-499a-9ddc-398634e1098e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5d2900ec-a412-41f0-a8d8-0fda69326349" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://invoicesByContarctIDtest/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy payload" doc:id="ca35def0-3547-4ac0-b275-fdccd50eb4e7" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bd739e30-fd9d-4779-9877-fe69df52bdc7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="07c6bb24-5f08-4dcb-87d0-7d7483c2ee26" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import invoicesByContarctIDtest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="d24dfc3e-d596-4c11-b452-c0f39bb55a9e" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import invoicesByContarctIDtest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="24199109-6302-43a4-9e29-4cdc7836b078" >
				<munit:payload value="#[readUrl('classpath://invoicesByContarctIDtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://invoicesByContarctIDtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://invoicesByContarctIDtest/set-event_variable_.dwl')]" />
					<munit:variable key="contractId" value="#[output application/java --- readUrl('classpath://invoicesByContarctIDtest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="maskedRequestPath" value="#[output application/java --- readUrl('classpath://invoicesByContarctIDtest/set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to invoicesByContarctID::Flow" doc:id="190c2277-9414-4b58-9f9d-79244f68444c" name="invoicesByContarctID::Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ab7f236a-b5ac-4c50-ba37-4fd78f122b5b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import invoicesByContarctIDtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify payload" doc:id="c26c015c-43a1-4e32-81f5-5514b5c288e7" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bd739e30-fd9d-4779-9877-fe69df52bdc7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>
